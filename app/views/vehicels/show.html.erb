
  <div style="width: 100vw; height: 480px" id="mapContainer"></div>
  <script>
    let lat_  = 0.0;
    let long_ = 0.0;

    $(document).on('ready turbolinks:change turbolinks:load', function() {

      <% @vehicel.locations.each do |l|%>
        lat_ = parseFloat('<%= l.latitude%>')
        long_ = parseFloat('<%= l.longitude%>')
     <%end%>

    var platform = new H.service.Platform({
      app_id: 'oLTj8XVPsFtstBhXebZZ',
      app_code: 'xjfwidV6r_b4u4heezueeg',
      useHTTPS: true
    });




    var pixelRatio = window.devicePixelRatio || 1;
    var defaultLayers = platform.createDefaultLayers({
    tileSize: pixelRatio === 1 ? 256 : 512,
    ppi: pixelRatio === 1 ? undefined : 320
    });

    // Obtain the default map types from the platform object
    var maptypes = platform.createDefaultLayers();

    // Instantiate (and display) a map object:
    var map = new H.Map(
    document.getElementById('mapContainer'),
    maptypes.normal.map,
    {
      pixelRatio: pixelRatio,
      zoom: 15,
      center: { lng: lat_ , lat: long_ }
    });

      //Step 3: make the map interactive
  // MapEvents enables the event system
  // Behavior implements default interactions for pan/zoom (also on mobile touch environments)
  var behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));

  // Create the default UI components
  var ui = H.ui.UI.createDefault(map, defaultLayers);






    // Define a variable holding SVG mark-up that defines an icon image:
    var svgMarkup = '<svg width="24" height="24" ' +
    'xmlns="http://www.w3.org/2000/svg">' +
    '<rect stroke="white" fill="#1b468d" x="1" y="1" width="50" ' +
    'height="22" /><text x="12" y="18" font-size="12pt" ' +
    'font-family="Arial" font-weight="bold" text-anchor="middle" ' +
    'fill="white">H</text></svg>';

    // Create an icon, an object holding the latitude and longitude, and a marker:
    var icon = new H.map.Icon(svgMarkup),
    coords = {lat: lat_, lng: long_},
    marker = new H.map.Marker(coords, {icon: icon});

    // Add the marker to the map and center the map at the location of the marker:
    map.addObject(marker);
    map.setCenter(coords);

    });
</script>

<%= link_to 'Edit', edit_user_vehicel_path(current_user,@vehicel), :class=> 'btn btn-outline-success btn-map' %>
<%= link_to 'Back', user_vehicels_path(current_user), :class=> 'btn btn-outline-success btn-map' %>
<%= link_to 'Get to your vehicle', user_vehicels_path(current_user) ,:class=> 'btn btn-outline-success btn-map'%>

<%= link_to 'Get From hardware', '#',:onclick => 'document.getElementById("hardware_state").textContent = "hello";
',class:"btn btn-outline-success btn-map" %>


